public class Solution {
    public static class Pet {
    private String name;
        public String getName() {
            return "Я котенок";
        }
        public Pet getChild(String name);
        this.name = name.getName("cat");
    }

}

/* Класс Cow от Animal
Унаследуйте класс Cow от Animal.
Реализуйте все недостающие методы в классе Cow.
*/

public class Solution {

    static abstract class Animal {
    private String name;
        public abstract String getName();
        return name;
    }

    public static class Cow (String name) {
    this.name = name; 
    if (name.equals ("Milka")) {
    return "It is my cow.";
    } else {
    return "Show me another cow.";
    }
    class Cow extends Animal {
    }
}

/* Классы Cat и Dog от Pet
Унаследуйте классы Cat и Dog от Pet.
Реализуйте недостающие методы. Классы Cat и Dog не должны быть абстрактными.
*/

public class Solution {
    public static abstract class Pet {

        public abstract String getName();

        public abstract Pet getChild();
    }

    public static class Cat {
     public abstract String getName(String name);
     System.out.println("Vaska is a " + name);
     public abstract Pet getChild();
     System.out.println("Kitten of " + name);
    }

    public static class Dog {
     public abstract String getName(String name);
     System.out.println( is a " + name);
     public abstract Pet getChild(name.getName());
     System.out.println("Puppy");
     }
     class Dog extends Pet {
     }  
    }
}



